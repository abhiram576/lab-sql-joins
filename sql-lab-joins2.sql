USE sakila;
SHOW TABLES;
-- 1 List the number of films per category.
SELECT count(film.title) as film_count, film_category.category_id FROM film
JOIN film_category
ON film.film_id= film_category.film_id
GROUP BY film_category.category_id;

-- 2 Retrieve the store ID, city, and country for each store.
SELECT * FROM store;
SELECT * FROM address;          -- store_id
SELECT * FROM city;				-- city 
SELECT * FROM country;			-- country

SELECT store.store_id , city.city, country.country
FROM store
JOIN address
USING (address_id)
join city
USING (city_id)
join country
USING(country_id);

-- 3 Calculate the total revenue generated by each store in dollars.
SELECT sum(payment.amount) as revenue , store.store_id
FROM store
JOIN staff
USING (store_id)
join payment
USING (staff_id)
GROUP BY store_id;

-- 4 Determine the average running time of films for each category.
SELECT avg(film.length) as runtime , category.name
FROM  film_category
JOIN film
USING (film_id)
join category
USING (category_id)
GROUP BY category_id;

-- 5 Identify the film categories with the longest average running time.
SELECT avg(film.length) as runtime , category.name
FROM  film_category
JOIN film
USING (film_id)
join category
USING (category_id)
GROUP BY category_id
ORDER BY runtime desc;

-- 6 Display the top 10 most frequently rented movies in descending order.
-- customer_id

SELECT * FROM film;
-- film_id
SELECT * FROM inventory;
-- inventory_id
 SELECT * FROM rental;
 
 SELECT film.title, count(rental.rental_id)as rental from film
JOIN inventory
USING (film_id)
join rental
USING (inventory_id)
GROUP BY film_id 
ORDER BY rental desc
LIMIT 10;

-- 7.Determine if "Academy Dinosaur" can be rented from Store 1.
SELECT f.title, s.store_id
FROM store s
JOIN inventory i
USING (store_id)
JOIN film f
USING (film_id)
WHERE f.title = "Academy Dinosaur" AND s.store_id=1 ;

-- 8
SELECT f.title,
CASE 
WHEN r.return_date IS NULL THEN 'NOT available'
ELSE 'Available'
END AS rental_status
FROM film f
JOIN inventory
USING (film_id)
JOIN rental r
USING (inventory_id);